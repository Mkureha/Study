-용어 정리-



내부결합(내부 조인 = INNER JOIN)

둘 이상의 테이블에 존재하는 공통 컬럼의값이 '같은 것'을 결과로 출력



외부결합(외부 조인 = OUTER JOIN)

*LEFT OUTER JOIN = JOIN문 왼쪽의 테이블을 가져온 후 오른쪽 테이블과 매칭하여 출력(매칭 데이터 없을시 NULL출력)

*RIGHT OUTER JOIN = LEFT와 반대로, 오른쪽 테이블을 가져온후 오른쪽 테이블과 비교

*FULL OUTER JOIN(완전 외부결합) = 두 테이블의 합집합(중복된 값 없음)



서브쿼리

:결과 내 검색 , 조인을 이용하지 않고 서브쿼리로도 결과 추출 가능

하나의 SELECT문장의 절 안에 포함된 또 하나의 SELECT 문장

###이하 연산자 이외에는 검색 결과가 한 개 이상일 경우 에러 발생###

* ANY 연산자 - 서브쿼리의 출력결과와 하나이상의 조건이 만족하면 참이 된다.

(추가:값이 하나라도 크거나 작거나 같거나 등의 비교연산자 사용할때 사용)



"> ANY" 라고 표시를 하면 "비교값 중 하나보다 크냐" 라고 묻는 것이 되며

그 값들 중 어느 하나 보다 더 크면, 즉 값들의 최소값보다 더 크면 참이 된다.



* EXIST 연산자 - 만족하는 값이 하나라도 존재하면 참이 되는 연산자



* UPDATE - 서브쿼리를 사용하여 출력한 데이터에 맞는 컬럼의 값을 수정

(WHERE절 생략시 명시한 테이블의 전체 행을 변경, 같은 칼럼 두번 이상 사용 금지)

* DELETE - 서브쿼리를 사용하여 출력한 데이터에 맞는 컬럼을 삭제





-수식 사용-



SELECT *

FROM test."支店別店員別販売情報" INNER JOIN test."支店別店員別販売２"

  ON test."支店別店員別販売情報".支社番号 = test."支店別店員別販売２".支社番号;

<<두개의 테이블에서 支社番号같은 값을 출력



SELECT *

FROM test."支店別店員別販売情報" LEFT OUTER JOIN test."支店別店員別販売２"

  ON test."支店別店員別販売情報".支社番号 = test."支店別店員別販売２".支社番号;

<<支店別店員別販売２테이블에서 支店別店員別販売情報테이블의 支社番号와 같은 값을 출력



SELECT *

FROM test."支店別店員別販売情報" RIGHT OUTER JOIN test."支店別店員別販売２"

  ON test."支店別店員別販売情報".支社番号 = test."支店別店員別販売２".支社番号;

<<支店別店員別販売情報 테이블에서 支店別店員別販売２테이블의 支社番号가 같은 값을 출력



SELECT *

FROM test."支店別店員別販売情報" FULL OUTER JOIN test."支店別店員別販売２"

  ON test."支店別店員別販売情報".支社番号 = test."支店別店員別販売２".支社番号;

<<두 테이블의 값을 합쳐서 출력





----------------------------------------------------

**번호 순서대로 처리 진행**(SELECT 서브쿼리)





select 支店コード,店員番号,機種変更      

from test."支店別店員別販売情報"         

where 販売数 = (select max(販売数)

                    from test."支店別店員別販売情報"

                    where MNP = '2');

1.<<test계정에서 支店別店員別販売情報테이블에서 MNP 2개 이상인 값중 최고 販売数를 가진 사람을 출력

2.<<TEST계정에支店別店員別販売情報테이블에서 ()값이동일한 販売数를 가지는 支店コード,店員番号,機種変更의 값을 출력





select 支店コード,処理年月日                          

from test."支店別店員別販売情報"                      

where MNP >= any (select 機種変更                     

　　　　　　　　　from test."支店別店員別販売情報"    

                  where 機種変更 >= '1');             

1.<<TEST계정에서 支店別店員別販売情報 테이블에서機種変更가1이상인 값들중 MNP 값을 출력

2.<<TEST계정에 支店別店員別販売情報테이블에서()값중 MNP값을 만족하는 것의 支店コード,処理年月日 출력







select 支店コード,店員番号                            

from test."支店別店員別販売情報"                      

where exists ( select *

               from test."支店別店員別販売２"

　　　　　　　 where test."支店別店員別販売情報".支社番号 = test."支店別店員別販売２".支社番号);

1.<<TEST계정의 支店別店員別販売２테이블을 불러와서,TEST계정의 支店別店員別販売情報 테이블의 支社番号와 비슷한 값을 모두 출력

2.<<TEST계정에서 支店別店員別販売情報테이블에서()값을 충족하는 모든 값의 支店コード,店員番号 출력



---UPDATE 서브쿼리---



**set 절에서 서브쿼리 UPDATE문**

UPDATE 支店別店員別販売情報

　　　 set 支店コード = 'CDEF', MNP = (select 1.1 * avg(MNP) from 支店別店員別販売情報)

       where 支社番号 = 'P3';

<<支店別店員別販売情報테이블에서 支社番号가 P3인 행에서 支店コード를 CDEF로, MNP값을 평균에서 10% 올린 값으로 변경



**where절에서 서브쿼리 UPDATE문**

UPDATE 支店別店員別販売情報

       set 販売数 = 販売数 + 1

       where 支社番号 in ( select 支社番号

                           from 支店別店員別販売情報

                           where 支社番号 = 'P2');

<<支店別店員別販売情報테이블에서 支社番号가 P2인 사람의 販売数를 1 증가



---DELETE 서브쿼리---



delete from 支店別店員別販売情報

where 解約数 = (select 解約数 from 支店別店員別販売情報

                where 解約数 = '1');

<<支店別店員別販売情報테이블에서 解約数가 1인 것을 삭제





* 서브쿼리의 값은 한개만 출력이 되어야한다!!*

두개 이상 출력시 에러 발생
